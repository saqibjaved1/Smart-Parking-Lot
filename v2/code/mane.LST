C51 COMPILER V9.01   MANE                                                                  01/04/2017 09:31:08 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MANE
OBJECT MODULE PLACED IN mane.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE mane.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          
   4          #define lcdport P1
   5          #define scanport P2
   6          sbit s0 = scanport^2;
   7          sbit s1 = scanport^3;
   8          sbit rs = lcdport^3;
   9          sbit en  = lcdport^2;
  10          sbit sublot0 = P3^6;
  11          sbit sublot1 = P3^7;
  12          sbit sublot2 = P1^1;
  13          sbit sublot3 = P1^0;
  14          
  15          
  16          unsigned int i,j,k,ang,tim;
  17          unsigned char z;
  18          unsigned char count=0;
  19          unsigned char temp=0;
  20          sbit LDR= P3^0;                                  //input from LDR
  21          sbit Led=P3^1;                   //Output for LED
  22          sbit big_entry = P3^4; 
  23          sbit big_exit = P3^5;                                  
  24          sfr ldata = 0x90;                               //configuring port 1 for LCD
  25          unsigned char emp1[]= "EMPTY LOT ";
  26          unsigned char fu[]= "FULL LOT ";
  27          unsigned char noc[]= "No. Of Cars: ";
  28          int value[2] = {0};
  29          //integer -> seperate  numerical characters
  30          int* div_num(unsigned int t)
  31          {
  32   1        if(t<10)
  33   1        {
  34   2          value[0] = t;
  35   2          value[1] = 0;
  36   2        }
  37   1        if(t>=10)
  38   1        {
  39   2          value[1] = t/10;
  40   2          value[0] = t%10;
  41   2        }
  42   1        return value;
  43   1      }
  44          
  45          
  46          void dela(int a)//delay for lcd
  47          {
  48   1         int i;
  49   1         for(i=0;i<a;i++);   //null statement
  50   1      }
  51          
  52          
  53          void Delay(unsigned int x)                          
  54           // Generic function for 10ms Delay
  55          {  
C51 COMPILER V9.01   MANE                                                                  01/04/2017 09:31:08 PAGE 2   

  56   1        for(i=0;i<x;i++)
  57   1        for (j=0;j<10000;j++);
  58   1      }
  59          void Delay123(unsigned int x)        
  60          // Generic function for 1ms Delay(for motor )
  61          {  
  62   1        for(i=0;i<x;i++)
  63   1        for (j=0;j<1000;j++);
  64   1      }
  65          
  66          void scan_sublots()
  67          {
  68   1        scanport = 0xf0;
  69   1        temp=0;
  70   1        //scan sublot-lot 0
  71   1        s0 = 0;
  72   1        s1 = 0;
  73   1        temp = scanport;//scanned values on higher bits
  74   1        temp = temp&0xf0;//Mask lower bits
  75   1        if(temp)
  76   1        sublot0 = 1;
  77   1        if(!temp)
  78   1        sublot0 = 0;
  79   1        //scan sublot-lot 1
  80   1        s0 = 1;
  81   1        s1 = 0;
  82   1        temp = scanport;//scanned values on higher bits
  83   1        temp = temp&0xf0;//Mask lower bits
  84   1        if(temp)
  85   1        sublot1 = 1;
  86   1        if(!temp)
  87   1        sublot1 = 0;
  88   1        //scan sublot-lot 2
  89   1        s0 = 0;
  90   1        s1 = 1;
  91   1        temp = scanport;//scanned values on higher bits
  92   1        temp = temp&0xf0;//Mask lower bits
  93   1        if(temp)
  94   1        sublot2 = 1;
  95   1        if(!temp)
  96   1        sublot2 = 0;
  97   1        //scan sublot-lot 3
  98   1        s0 = 1;
  99   1        s1 = 1;
 100   1        temp = scanport;//scanned values on higher bits
 101   1        temp = temp&0xf0;//Mask lower bits
 102   1        if(temp)
 103   1        sublot3 = 1;
 104   1        if(!temp)
 105   1        sublot3 = 0;
 106   1        temp=0;
 107   1        
 108   1      }
 109          
 110          void gate_operate_1(unsigned int ang,unsigned int tim)
 111          {
 112   1        for(z=0;z<(ang*2);z++)//Change multiplier according to motor
 113   1        {
 114   2        P0=0x03;         //00000011
 115   2        Delay123(3);             
 116   2        P0=0x06;        //00000110
 117   2        Delay123(3);
C51 COMPILER V9.01   MANE                                                                  01/04/2017 09:31:08 PAGE 3   

 118   2        P0=0x0C;     //00001100
 119   2        Delay123(3);
 120   2        P0=0x09;    //00001001
 121   2          Delay123(3);
 122   2        }
 123   1        Delay(tim);                        //Barrier opens for seconds(Choose)
 124   1          for(z=0;z<(ang*2);z++)//Change multiplier according to motor
 125   1        {
 126   2        P0=0x09;    //00001001
 127   2          Delay123(3);
 128   2        P0=0x0C;     //00001100
 129   2        Delay123(3);
 130   2        P0=0x06;        //00000110
 131   2        Delay123(3);
 132   2        P0=0x03;         //00000011
 133   2        Delay123(3);
 134   2        }             //Motor in opposite direction to close the barrier
 135   1        Delay123(3);
 136   1        P0=0x06;
 137   1        Delay123(3);
 138   1          P0=0x00;
 139   1      }
 140          
 141          void gate_operate_2(unsigned int ang, unsigned int tim)
 142          {
 143   1        for(z=0;z<(ang*2);z++)//Change multiplier according to motor
 144   1        {
 145   2        P0=0x30;         //00110000
 146   2          Delay123(3);
 147   2        P0=0x60;        //01100000
 148   2        Delay123(3);
 149   2        P0=0xC0;     //11000000
 150   2        Delay123(3);
 151   2        P0=0x90;    //10010000
 152   2          Delay123(3);
 153   2        }
 154   1        Delay(tim);                        //Barrier opens for seconds(Choose)
 155   1          for(z=0;z<(ang*2);z++)//Change multiplier according to motor
 156   1        {
 157   2        P0=0x90;    //10010000
 158   2          Delay123(3);
 159   2        P0=0xC0;     //11000000
 160   2        Delay123(3);
 161   2        P0=0x60;        //01100000
 162   2        Delay123(3);
 163   2        P0=0x30;         //00110000
 164   2        Delay123(3);
 165   2        }
 166   1        Delay123(3);
 167   1        P0=0x60;
 168   1        Delay123(3);
 169   1        P0=0x00;
 170   1      }
 171          
 172          
 173          void lcdcommand(unsigned char a)
 174          {
 175   1         rs = 0;             // This is command
 176   1      
 177   1         lcdport &= 0x0F;      // Make P2.4 to P2.7 zero
 178   1         lcdport |= (a&0xF0);     // Write Upper nibble of data
 179   1      
C51 COMPILER V9.01   MANE                                                                  01/04/2017 09:31:08 PAGE 4   

 180   1         en  = 1;             // => en = 1
 181   1         dela(150);
 182   1         en  = 0;             // => en = 0
 183   1         dela(150);
 184   1      
 185   1         lcdport &= 0x0F;      // Make P2.4 to P2.7 zero
 186   1         lcdport |= ((a<<4)&0xF0);// Write Lower nibble of data
 187   1      
 188   1         en  = 1;             // => en = 1
 189   1         dela(150);
 190   1         en  = 0;             // => en = 0
 191   1         dela(150);
 192   1      }
 193          
 194          void data1(unsigned char b)
 195          {
 196   1         rs = 1;             // This is data
 197   1      
 198   1         lcdport &= 0x0F;      // Make P2.4 to P2.7 zero
 199   1         lcdport |= (b&0xF0);     // Write Upper nibble of data
 200   1      
 201   1         en  = 1;             // => en = 1
 202   1         dela(150);
 203   1         en  = 0;             // => en = 0
 204   1         dela(150);
 205   1      
 206   1         lcdport &= 0x0F;      // Make P2.4 to P2.7 zero
 207   1         lcdport |= ((b<<4)&0xF0);// Write Lower nibble of data
 208   1      
 209   1         en  = 1;             // => en = 1
 210   1         dela(150);
 211   1         en  = 0;             // => en = 0
 212   1         dela(150);
 213   1      }
 214          void init(void)
 215          {
 216   1        ///////////// Reset process from datasheet /////////
 217   1           dela(15000);
 218   1      
 219   1         lcdport &= 0x0F;      // Make P2.4 to P2.7 zero
 220   1         lcdport |= (0x30&0xF0);    // Write 0x3
 221   1        
 222   1         en  = 1;               // => en = 1
 223   1         dela(150);
 224   1         en  = 0;               // => en = 0
 225   1         dela(150);
 226   1      
 227   1           dela(4500);
 228   1      
 229   1         lcdport &= 0x0F;      // Make P2.4 to P2.7 zero
 230   1         lcdport |= (0x30&0xF0);    // Write 0x3
 231   1        
 232   1         en  = 1;               // => en = 1
 233   1         dela(150);
 234   1         en  = 0;               // => en = 0
 235   1         dela(150);
 236   1      
 237   1           dela(300);
 238   1      
 239   1         lcdport &= 0x0F;      // Make P2.4 to P2.7 zero
 240   1         lcdport |= (0x30&0xF0);    // Write 0x3
 241   1        
C51 COMPILER V9.01   MANE                                                                  01/04/2017 09:31:08 PAGE 5   

 242   1         en  = 1;               // => en = 1
 243   1         dela(150);
 244   1         en  = 0;               // => en = 0
 245   1         dela(150);
 246   1      
 247   1           dela(650);
 248   1      
 249   1         lcdport &= 0x0F;      // Make P2.4 to P2.7 zero
 250   1         lcdport |= (0x20&0xF0);    // Write 0x2
 251   1        
 252   1         en  = 1;               // => en = 1
 253   1         dela(150);
 254   1         en  = 0;               // => en = 0
 255   1         dela(150);
 256   1      
 257   1         dela(650);
 258   1      
 259   1        /////////////////////////////////////////////////////
 260   1         lcdcommand(0x28);    //function set
 261   1         lcdcommand(0x0c);    //display on,cursor off,blink off
 262   1         lcdcommand(0x01);    //clear display
 263   1         lcdcommand(0x06);    //entry mode, set increment
 264   1      }
 265          
 266          void emptylot(void)
 267          {
 268   1      //Empty lot message
 269   1        lcdcommand(0x01);
 270   1          for(z=0;z<9;z++)
 271   1          { 
 272   2            data1(emp1[z]);
 273   2          }
 274   1        lcdcommand(0x0c);
 275   1      }
 276          
 277          void fulllot(void)
 278          {
 279   1         //unsigned char ful[]= "    FULL LOT";
 280   1          lcdcommand(0x01);
 281   1          for(z=0;z<8;z++)
 282   1          { 
 283   2            data1(fu[z]);
 284   2          }
 285   1        lcdcommand(0x0c);
 286   1      }
 287          
 288          void display_no(void)
 289          {
 290   1      //Display no of cars
 291   1          lcdcommand(0x01);
 292   1          for(z=0;z<13;z++)
 293   1          { 
 294   2            data1(noc[z]);
 295   2          }         
 296   1          div_num(count);
 297   1          for(z= 0 ; z < 2 ; z++ )
 298   1              data1(value[1-z]+48);
 299   1          lcdcommand(0x0c);
 300   1      }
 301          
 302          //**********************Interrupt for enter******************//
 303          void Gate_Enter() interrupt 0                                   //Interrupt INT0 p3.2, address=0003H
C51 COMPILER V9.01   MANE                                                                  01/04/2017 09:31:08 PAGE 6   

 304          {  
 305   1        unsigned char temp=count;
 306   1        ang = 10;
 307   1        if(big_entry) 
 308   1        ang = 20;
 309   1        gate_operate_1(ang,50);
 310   1      
 311   1        count++;
 312   1        temp=count+48;
 313   1        switch (temp)
 314   1        {
 315   2          case (48):
 316   2          {
 317   3          emptylot();
 318   3          break;
 319   3          }  
 320   2          case (64):
 321   2          {
 322   3          fulllot();
 323   3          break;
 324   3          }
 325   2          default:
 326   2          {  
 327   3        display_no();
 328   3        break;
 329   3          }   
 330   2         }
 331   1        }
 332           //******************Interrupt for exit******************//
 333          void Gate_Exit() interrupt 2                                   //Interrupt INT1 p3.3 , address=0013H
 334          {  
 335   1      unsigned char temp=count;
 336   1        ang = 10;
 337   1        if(big_exit) 
 338   1        ang = 20; 
 339   1        gate_operate_2(ang,50);
 340   1        count--;
 341   1        temp=count+48;
 342   1        switch (temp)
 343   1        {
 344   2          case (48):
 345   2          {
 346   3          emptylot();
 347   3          break;
 348   3          }  
 349   2          case (64):
 350   2          {
 351   3          fulllot();
 352   3          break;
 353   3          }
 354   2          default:
 355   2          {  
 356   3        display_no();
 357   3        break;
 358   3          }   
 359   2         }
 360   1      }
 361            //*************************main********************************//
 362          void main()
 363          {
 364   1        unsigned char wel[]= "    WELCOME ";
 365   1        P0=0x00;       //output configure for motor
C51 COMPILER V9.01   MANE                                                                  01/04/2017 09:31:08 PAGE 7   

 366   1        P2=0x00;
 367   1        P1=0x00;                      // P3 and P2 as output ports
 368   1        P3=0x00;
 369   1        init(); 
 370   1      for(z=0;z<12;z++)
 371   1       data1(wel[z]);
 372   1      lcdcommand(0x0c);
 373   1      Delay(6);
 374   1      
 375   1      emptylot();
 376   1        TCON=0x05;                              //Edge sensitive
 377   1        IE=0x85;            //enabling interrupts                                                    
 378   1        LDR=1;      //Configure input
 379   1        while (1)
 380   1        {
 381   2        scan_sublots(); 
 382   2        if (count==0)
 383   2          { 
 384   3            Led=0;
 385   3            P2=0x00;
 386   3          }
 387   2          else
 388   2          {
 389   3            if(LDR==1 && count > 0)           //Check for LDR Input, 1=high R =Night
 390   3            { Led=1;
 391   4              P2=0xFF;
 392   4            }
 393   3            else if(LDR==0)
 394   3            { Led=0;
 395   4              P2=0x00;
 396   4            }
 397   3          }
 398   2        }
 399   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1123    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     52      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
